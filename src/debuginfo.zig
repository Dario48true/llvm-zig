const LLVMtype = @import("types.zig");

pub const LLVMDIFlagZero: c_int = 0;
pub const LLVMDIFlagPrivate: c_int = 1;
pub const LLVMDIFlagProtected: c_int = 2;
pub const LLVMDIFlagPublic: c_int = 3;
pub const LLVMDIFlagFwdDecl: c_int = 4;
pub const LLVMDIFlagAppleBlock: c_int = 8;
pub const LLVMDIFlagReservedBit4: c_int = 16;
pub const LLVMDIFlagVirtual: c_int = 32;
pub const LLVMDIFlagArtificial: c_int = 64;
pub const LLVMDIFlagExplicit: c_int = 128;
pub const LLVMDIFlagPrototyped: c_int = 256;
pub const LLVMDIFlagObjcClassComplete: c_int = 512;
pub const LLVMDIFlagObjectPointer: c_int = 1024;
pub const LLVMDIFlagVector: c_int = 2048;
pub const LLVMDIFlagStaticMember: c_int = 4096;
pub const LLVMDIFlagLValueReference: c_int = 8192;
pub const LLVMDIFlagRValueReference: c_int = 16384;
pub const LLVMDIFlagReserved: c_int = 32768;
pub const LLVMDIFlagSingleInheritance: c_int = 65536;
pub const LLVMDIFlagMultipleInheritance: c_int = 131072;
pub const LLVMDIFlagVirtualInheritance: c_int = 196608;
pub const LLVMDIFlagIntroducedVirtual: c_int = 262144;
pub const LLVMDIFlagBitField: c_int = 524288;
pub const LLVMDIFlagNoReturn: c_int = 1048576;
pub const LLVMDIFlagTypePassByValue: c_int = 4194304;
pub const LLVMDIFlagTypePassByReference: c_int = 8388608;
pub const LLVMDIFlagEnumClass: c_int = 16777216;
pub const LLVMDIFlagFixedEnum: c_int = 16777216;
pub const LLVMDIFlagThunk: c_int = 33554432;
pub const LLVMDIFlagNonTrivial: c_int = 67108864;
pub const LLVMDIFlagBigEndian: c_int = 134217728;
pub const LLVMDIFlagLittleEndian: c_int = 268435456;
pub const LLVMDIFlagIndirectVirtualBase: c_int = 36;
pub const LLVMDIFlagAccessibility: c_int = 3;
pub const LLVMDIFlagPtrToMemberRep: c_int = 196608;
pub const LLVMDIFlags = c_uint;
pub const LLVMDWARFSourceLanguageC89: c_int = 0;
pub const LLVMDWARFSourceLanguageC: c_int = 1;
pub const LLVMDWARFSourceLanguageAda83: c_int = 2;
pub const LLVMDWARFSourceLanguageC_plus_plus: c_int = 3;
pub const LLVMDWARFSourceLanguageCobol74: c_int = 4;
pub const LLVMDWARFSourceLanguageCobol85: c_int = 5;
pub const LLVMDWARFSourceLanguageFortran77: c_int = 6;
pub const LLVMDWARFSourceLanguageFortran90: c_int = 7;
pub const LLVMDWARFSourceLanguagePascal83: c_int = 8;
pub const LLVMDWARFSourceLanguageModula2: c_int = 9;
pub const LLVMDWARFSourceLanguageJava: c_int = 10;
pub const LLVMDWARFSourceLanguageC99: c_int = 11;
pub const LLVMDWARFSourceLanguageAda95: c_int = 12;
pub const LLVMDWARFSourceLanguageFortran95: c_int = 13;
pub const LLVMDWARFSourceLanguagePLI: c_int = 14;
pub const LLVMDWARFSourceLanguageObjC: c_int = 15;
pub const LLVMDWARFSourceLanguageObjC_plus_plus: c_int = 16;
pub const LLVMDWARFSourceLanguageUPC: c_int = 17;
pub const LLVMDWARFSourceLanguageD: c_int = 18;
pub const LLVMDWARFSourceLanguagePython: c_int = 19;
pub const LLVMDWARFSourceLanguageOpenCL: c_int = 20;
pub const LLVMDWARFSourceLanguageGo: c_int = 21;
pub const LLVMDWARFSourceLanguageModula3: c_int = 22;
pub const LLVMDWARFSourceLanguageHaskell: c_int = 23;
pub const LLVMDWARFSourceLanguageC_plus_plus_03: c_int = 24;
pub const LLVMDWARFSourceLanguageC_plus_plus_11: c_int = 25;
pub const LLVMDWARFSourceLanguageOCaml: c_int = 26;
pub const LLVMDWARFSourceLanguageRust: c_int = 27;
pub const LLVMDWARFSourceLanguageC11: c_int = 28;
pub const LLVMDWARFSourceLanguageSwift: c_int = 29;
pub const LLVMDWARFSourceLanguageJulia: c_int = 30;
pub const LLVMDWARFSourceLanguageDylan: c_int = 31;
pub const LLVMDWARFSourceLanguageC_plus_plus_14: c_int = 32;
pub const LLVMDWARFSourceLanguageFortran03: c_int = 33;
pub const LLVMDWARFSourceLanguageFortran08: c_int = 34;
pub const LLVMDWARFSourceLanguageRenderScript: c_int = 35;
pub const LLVMDWARFSourceLanguageBLISS: c_int = 36;
pub const LLVMDWARFSourceLanguageKotlin: c_int = 37;
pub const LLVMDWARFSourceLanguageZig: c_int = 38;
pub const LLVMDWARFSourceLanguageCrystal: c_int = 39;
pub const LLVMDWARFSourceLanguageC_plus_plus_17: c_int = 40;
pub const LLVMDWARFSourceLanguageC_plus_plus_20: c_int = 41;
pub const LLVMDWARFSourceLanguageC17: c_int = 42;
pub const LLVMDWARFSourceLanguageFortran18: c_int = 43;
pub const LLVMDWARFSourceLanguageAda2005: c_int = 44;
pub const LLVMDWARFSourceLanguageAda2012: c_int = 45;
pub const LLVMDWARFSourceLanguageMips_Assembler: c_int = 46;
pub const LLVMDWARFSourceLanguageGOOGLE_RenderScript: c_int = 47;
pub const LLVMDWARFSourceLanguageBORLAND_Delphi: c_int = 48;
pub const LLVMDWARFSourceLanguage = c_uint;
pub const LLVMDWARFEmissionNone: c_int = 0;
pub const LLVMDWARFEmissionFull: c_int = 1;
pub const LLVMDWARFEmissionLineTablesOnly: c_int = 2;
pub const LLVMDWARFEmissionKind = c_uint;
pub const LLVMMDStringMetadataKind: c_int = 0;
pub const LLVMConstantAsMetadataMetadataKind: c_int = 1;
pub const LLVMLocalAsMetadataMetadataKind: c_int = 2;
pub const LLVMDistinctMDOperandPlaceholderMetadataKind: c_int = 3;
pub const LLVMMDTupleMetadataKind: c_int = 4;
pub const LLVMDILocationMetadataKind: c_int = 5;
pub const LLVMDIExpressionMetadataKind: c_int = 6;
pub const LLVMDIGlobalVariableExpressionMetadataKind: c_int = 7;
pub const LLVMGenericDINodeMetadataKind: c_int = 8;
pub const LLVMDISubrangeMetadataKind: c_int = 9;
pub const LLVMDIEnumeratorMetadataKind: c_int = 10;
pub const LLVMDIBasicTypeMetadataKind: c_int = 11;
pub const LLVMDIDerivedTypeMetadataKind: c_int = 12;
pub const LLVMDICompositeTypeMetadataKind: c_int = 13;
pub const LLVMDISubroutineTypeMetadataKind: c_int = 14;
pub const LLVMDIFileMetadataKind: c_int = 15;
pub const LLVMDICompileUnitMetadataKind: c_int = 16;
pub const LLVMDISubprogramMetadataKind: c_int = 17;
pub const LLVMDILexicalBlockMetadataKind: c_int = 18;
pub const LLVMDILexicalBlockFileMetadataKind: c_int = 19;
pub const LLVMDINamespaceMetadataKind: c_int = 20;
pub const LLVMDIModuleMetadataKind: c_int = 21;
pub const LLVMDITemplateTypeParameterMetadataKind: c_int = 22;
pub const LLVMDITemplateValueParameterMetadataKind: c_int = 23;
pub const LLVMDIGlobalVariableMetadataKind: c_int = 24;
pub const LLVMDILocalVariableMetadataKind: c_int = 25;
pub const LLVMDILabelMetadataKind: c_int = 26;
pub const LLVMDIObjCPropertyMetadataKind: c_int = 27;
pub const LLVMDIImportedEntityMetadataKind: c_int = 28;
pub const LLVMDIMacroMetadataKind: c_int = 29;
pub const LLVMDIMacroFileMetadataKind: c_int = 30;
pub const LLVMDICommonBlockMetadataKind: c_int = 31;
pub const LLVMDIStringTypeMetadataKind: c_int = 32;
pub const LLVMDIGenericSubrangeMetadataKind: c_int = 33;
pub const LLVMDIArgListMetadataKind: c_int = 34;
pub const LLVMDIAssignIDMetadataKind: c_int = 35;
pub const LLVMDWARFMacinfoRecordTypeDefine: c_int = 1;
pub const LLVMDWARFMacinfoRecordTypeMacro: c_int = 2;
pub const LLVMDWARFMacinfoRecordTypeStartFile: c_int = 3;
pub const LLVMDWARFMacinfoRecordTypeEndFile: c_int = 4;
pub const LLVMDWARFMacinfoRecordTypeVendorExt: c_int = 255;
pub const LLVMDWARFMacinfoRecordType = c_uint;
pub extern fn LLVMDebugMetadataVersion() c_uint;
pub extern fn LLVMGetModuleDebugMetadataVersion(Module: LLVMtype.LLVMModuleRef) c_uint;
pub extern fn LLVMStripModuleDebugInfo(Module: LLVMtype.LLVMModuleRef) LLVMtype.LLVMBool;
pub extern fn LLVMCreateDIBuilderDisallowUnresolved(M: LLVMtype.LLVMModuleRef) LLVMtype.LLVMDIBuilderRef;
pub extern fn LLVMCreateDIBuilder(M: LLVMtype.LLVMModuleRef) LLVMtype.LLVMDIBuilderRef;
pub extern fn LLVMDisposeDIBuilder(Builder: LLVMtype.LLVMDIBuilderRef) void;
pub extern fn LLVMDIBuilderFinalize(Builder: LLVMtype.LLVMDIBuilderRef) void;
pub extern fn LLVMDIBuilderFinalizeSubprogram(Builder: LLVMtype.LLVMDIBuilderRef, Subprogram: LLVMtype.LLVMMetadataRef) void;
pub extern fn LLVMDIBuilderCreateCompileUnit(Builder: LLVMtype.LLVMDIBuilderRef, Lang: LLVMDWARFSourceLanguage, FileRef: LLVMtype.LLVMMetadataRef, Producer: [*c]const u8, ProducerLen: usize, isOptimized: LLVMtype.LLVMBool, Flags: [*c]const u8, FlagsLen: usize, RuntimeVer: c_uint, SplitName: [*c]const u8, SplitNameLen: usize, Kind: LLVMDWARFEmissionKind, DWOId: c_uint, SplitDebugInlining: LLVMtype.LLVMBool, DebugInfoForProfiling: LLVMtype.LLVMBool, SysRoot: [*c]const u8, SysRootLen: usize, SDK: [*c]const u8, SDKLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateFile(Builder: LLVMtype.LLVMDIBuilderRef, Filename: [*c]const u8, FilenameLen: usize, Directory: [*c]const u8, DirectoryLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateModule(Builder: LLVMtype.LLVMDIBuilderRef, ParentScope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, ConfigMacros: [*c]const u8, ConfigMacrosLen: usize, IncludePath: [*c]const u8, IncludePathLen: usize, APINotesFile: [*c]const u8, APINotesFileLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateNameSpace(Builder: LLVMtype.LLVMDIBuilderRef, ParentScope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, ExportSymbols: LLVMtype.LLVMBool) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateFunction(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, LinkageName: [*c]const u8, LinkageNameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, Ty: LLVMtype.LLVMMetadataRef, IsLocalToUnit: LLVMtype.LLVMBool, IsDefinition: LLVMtype.LLVMBool, ScopeLine: c_uint, Flags: LLVMDIFlags, IsOptimized: LLVMtype.LLVMBool) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateLexicalBlock(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint, Column: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateLexicalBlockFile(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Discriminator: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateImportedModuleFromNamespace(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, NS: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateImportedModuleFromAlias(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, ImportedEntity: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateImportedModuleFromModule(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, M: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateImportedDeclaration(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Decl: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint, Name: [*c]const u8, NameLen: usize, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateDebugLocation(Ctx: LLVMtype.LLVMContextRef, Line: c_uint, Column: c_uint, Scope: LLVMtype.LLVMMetadataRef, InlinedAt: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDILocationGetLine(Location: LLVMtype.LLVMMetadataRef) c_uint;
pub extern fn LLVMDILocationGetColumn(Location: LLVMtype.LLVMMetadataRef) c_uint;
pub extern fn LLVMDILocationGetScope(Location: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDILocationGetInlinedAt(Location: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIScopeGetFile(Scope: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIFileGetDirectory(File: LLVMtype.LLVMMetadataRef, Len: [*c]c_uint) [*c]const u8;
pub extern fn LLVMDIFileGetFilename(File: LLVMtype.LLVMMetadataRef, Len: [*c]c_uint) [*c]const u8;
pub extern fn LLVMDIFileGetSource(File: LLVMtype.LLVMMetadataRef, Len: [*c]c_uint) [*c]const u8;
pub extern fn LLVMDIBuilderGetOrCreateTypeArray(Builder: LLVMtype.LLVMDIBuilderRef, Data: [*c]LLVMtype.LLVMMetadataRef, NumElements: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateSubroutineType(Builder: LLVMtype.LLVMDIBuilderRef, File: LLVMtype.LLVMMetadataRef, ParameterTypes: [*c]LLVMtype.LLVMMetadataRef, NumParameterTypes: c_uint, Flags: LLVMDIFlags) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateMacro(Builder: LLVMtype.LLVMDIBuilderRef, ParentMacroFile: LLVMtype.LLVMMetadataRef, Line: c_uint, RecordType: LLVMDWARFMacinfoRecordType, Name: [*c]const u8, NameLen: usize, Value: [*c]const u8, ValueLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateTempMacroFile(Builder: LLVMtype.LLVMDIBuilderRef, ParentMacroFile: LLVMtype.LLVMMetadataRef, Line: c_uint, File: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateEnumerator(Builder: LLVMtype.LLVMDIBuilderRef, Name: [*c]const u8, NameLen: usize, Value: i64, IsUnsigned: LLVMtype.LLVMBool) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateEnumerationType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNumber: c_uint, SizeInBits: u64, AlignInBits: u32, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint, ClassTy: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateUnionType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNumber: c_uint, SizeInBits: u64, AlignInBits: u32, Flags: LLVMDIFlags, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint, RunTimeLang: c_uint, UniqueId: [*c]const u8, UniqueIdLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateArrayType(Builder: LLVMtype.LLVMDIBuilderRef, Size: u64, AlignInBits: u32, Ty: LLVMtype.LLVMMetadataRef, Subscripts: [*c]LLVMtype.LLVMMetadataRef, NumSubscripts: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateVectorType(Builder: LLVMtype.LLVMDIBuilderRef, Size: u64, AlignInBits: u32, Ty: LLVMtype.LLVMMetadataRef, Subscripts: [*c]LLVMtype.LLVMMetadataRef, NumSubscripts: c_uint) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateUnspecifiedType(Builder: LLVMtype.LLVMDIBuilderRef, Name: [*c]const u8, NameLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateBasicType(Builder: LLVMtype.LLVMDIBuilderRef, Name: [*c]const u8, NameLen: usize, SizeInBits: u64, Encoding: LLVMtype.LLVMDWARFTypeEncoding, Flags: LLVMDIFlags) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreatePointerType(Builder: LLVMtype.LLVMDIBuilderRef, PointeeTy: LLVMtype.LLVMMetadataRef, SizeInBits: u64, AlignInBits: u32, AddressSpace: c_uint, Name: [*c]const u8, NameLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateStructType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNumber: c_uint, SizeInBits: u64, AlignInBits: u32, Flags: LLVMDIFlags, DerivedFrom: LLVMtype.LLVMMetadataRef, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint, RunTimeLang: c_uint, VTableHolder: LLVMtype.LLVMMetadataRef, UniqueId: [*c]const u8, UniqueIdLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateMemberType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, SizeInBits: u64, AlignInBits: u32, OffsetInBits: u64, Flags: LLVMDIFlags, Ty: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateStaticMemberType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNumber: c_uint, Type: LLVMtype.LLVMMetadataRef, Flags: LLVMDIFlags, ConstantVal: LLVMtype.LLVMValueRef, AlignInBits: u32) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateMemberPointerType(Builder: LLVMtype.LLVMDIBuilderRef, PointeeType: LLVMtype.LLVMMetadataRef, ClassType: LLVMtype.LLVMMetadataRef, SizeInBits: u64, AlignInBits: u32, Flags: LLVMDIFlags) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateObjCIVar(Builder: LLVMtype.LLVMDIBuilderRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, SizeInBits: u64, AlignInBits: u32, OffsetInBits: u64, Flags: LLVMDIFlags, Ty: LLVMtype.LLVMMetadataRef, PropertyNode: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateObjCProperty(Builder: LLVMtype.LLVMDIBuilderRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, GetterName: [*c]const u8, GetterNameLen: usize, SetterName: [*c]const u8, SetterNameLen: usize, PropertyAttributes: c_uint, Ty: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateObjectPointerType(Builder: LLVMtype.LLVMDIBuilderRef, Type: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateQualifiedType(Builder: LLVMtype.LLVMDIBuilderRef, Tag: c_uint, Type: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateReferenceType(Builder: LLVMtype.LLVMDIBuilderRef, Tag: c_uint, Type: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateNullPtrType(Builder: LLVMtype.LLVMDIBuilderRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateTypedef(Builder: LLVMtype.LLVMDIBuilderRef, Type: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, Scope: LLVMtype.LLVMMetadataRef, AlignInBits: u32) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateInheritance(Builder: LLVMtype.LLVMDIBuilderRef, Ty: LLVMtype.LLVMMetadataRef, BaseTy: LLVMtype.LLVMMetadataRef, BaseOffset: u64, VBPtrOffset: u32, Flags: LLVMDIFlags) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateForwardDecl(Builder: LLVMtype.LLVMDIBuilderRef, Tag: c_uint, Name: [*c]const u8, NameLen: usize, Scope: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint, RuntimeLang: c_uint, SizeInBits: u64, AlignInBits: u32, UniqueIdentifier: [*c]const u8, UniqueIdentifierLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateReplaceableCompositeType(Builder: LLVMtype.LLVMDIBuilderRef, Tag: c_uint, Name: [*c]const u8, NameLen: usize, Scope: LLVMtype.LLVMMetadataRef, File: LLVMtype.LLVMMetadataRef, Line: c_uint, RuntimeLang: c_uint, SizeInBits: u64, AlignInBits: u32, Flags: LLVMDIFlags, UniqueIdentifier: [*c]const u8, UniqueIdentifierLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateBitFieldMemberType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNumber: c_uint, SizeInBits: u64, OffsetInBits: u64, StorageOffsetInBits: u64, Flags: LLVMDIFlags, Type: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateClassType(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNumber: c_uint, SizeInBits: u64, AlignInBits: u32, OffsetInBits: u64, Flags: LLVMDIFlags, DerivedFrom: LLVMtype.LLVMMetadataRef, Elements: [*c]LLVMtype.LLVMMetadataRef, NumElements: c_uint, VTableHolder: LLVMtype.LLVMMetadataRef, TemplateParamsNode: LLVMtype.LLVMMetadataRef, UniqueIdentifier: [*c]const u8, UniqueIdentifierLen: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateArtificialType(Builder: LLVMtype.LLVMDIBuilderRef, Type: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDITypeGetName(DType: LLVMtype.LLVMMetadataRef, Length: [*c]usize) [*c]const u8;
pub extern fn LLVMDITypeGetSizeInBits(DType: LLVMtype.LLVMMetadataRef) u64;
pub extern fn LLVMDITypeGetOffsetInBits(DType: LLVMtype.LLVMMetadataRef) u64;
pub extern fn LLVMDITypeGetAlignInBits(DType: LLVMtype.LLVMMetadataRef) u32;
pub extern fn LLVMDITypeGetLine(DType: LLVMtype.LLVMMetadataRef) c_uint;
pub extern fn LLVMDITypeGetFlags(DType: LLVMtype.LLVMMetadataRef) LLVMDIFlags;
pub extern fn LLVMDIBuilderGetOrCreateSubrange(Builder: LLVMtype.LLVMDIBuilderRef, LowerBound: i64, Count: i64) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderGetOrCreateArray(Builder: LLVMtype.LLVMDIBuilderRef, Data: [*c]LLVMtype.LLVMMetadataRef, NumElements: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateExpression(Builder: LLVMtype.LLVMDIBuilderRef, Addr: [*c]u64, Length: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateConstantValueExpression(Builder: LLVMtype.LLVMDIBuilderRef, Value: u64) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateGlobalVariableExpression(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, Linkage: [*c]const u8, LinkLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, Ty: LLVMtype.LLVMMetadataRef, LocalToUnit: LLVMtype.LLVMBool, Expr: LLVMtype.LLVMMetadataRef, Decl: LLVMtype.LLVMMetadataRef, AlignInBits: u32) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIGlobalVariableExpressionGetVariable(GVE: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIGlobalVariableExpressionGetExpression(GVE: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIVariableGetFile(Var: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIVariableGetScope(Var: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIVariableGetLine(Var: LLVMtype.LLVMMetadataRef) c_uint;
pub extern fn LLVMTemporaryMDNode(Ctx: LLVMtype.LLVMContextRef, Data: [*c]LLVMtype.LLVMMetadataRef, NumElements: usize) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDisposeTemporaryMDNode(TempNode: LLVMtype.LLVMMetadataRef) void;
pub extern fn LLVMMetadataReplaceAllUsesWith(TempTargetMetadata: LLVMtype.LLVMMetadataRef, Replacement: LLVMtype.LLVMMetadataRef) void;
pub extern fn LLVMDIBuilderCreateTempGlobalVariableFwdDecl(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, Linkage: [*c]const u8, LnkLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, Ty: LLVMtype.LLVMMetadataRef, LocalToUnit: LLVMtype.LLVMBool, Decl: LLVMtype.LLVMMetadataRef, AlignInBits: u32) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderInsertDeclareBefore(Builder: LLVMtype.LLVMDIBuilderRef, Storage: LLVMtype.LLVMValueRef, VarInfo: LLVMtype.LLVMMetadataRef, Expr: LLVMtype.LLVMMetadataRef, DebugLoc: LLVMtype.LLVMMetadataRef, Instr: LLVMtype.LLVMValueRef) LLVMtype.LLVMValueRef;
pub extern fn LLVMDIBuilderInsertDeclareAtEnd(Builder: LLVMtype.LLVMDIBuilderRef, Storage: LLVMtype.LLVMValueRef, VarInfo: LLVMtype.LLVMMetadataRef, Expr: LLVMtype.LLVMMetadataRef, DebugLoc: LLVMtype.LLVMMetadataRef, Block: LLVMtype.LLVMBasicBlockRef) LLVMtype.LLVMValueRef;
pub extern fn LLVMDIBuilderInsertDbgValueBefore(Builder: LLVMtype.LLVMDIBuilderRef, Val: LLVMtype.LLVMValueRef, VarInfo: LLVMtype.LLVMMetadataRef, Expr: LLVMtype.LLVMMetadataRef, DebugLoc: LLVMtype.LLVMMetadataRef, Instr: LLVMtype.LLVMValueRef) LLVMtype.LLVMValueRef;
pub extern fn LLVMDIBuilderInsertDbgValueAtEnd(Builder: LLVMtype.LLVMDIBuilderRef, Val: LLVMtype.LLVMValueRef, VarInfo: LLVMtype.LLVMMetadataRef, Expr: LLVMtype.LLVMMetadataRef, DebugLoc: LLVMtype.LLVMMetadataRef, Block: LLVMtype.LLVMBasicBlockRef) LLVMtype.LLVMValueRef;
pub extern fn LLVMDIBuilderCreateAutoVariable(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, Ty: LLVMtype.LLVMMetadataRef, AlwaysPreserve: LLVMtype.LLVMBool, Flags: LLVMDIFlags, AlignInBits: u32) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMDIBuilderCreateParameterVariable(Builder: LLVMtype.LLVMDIBuilderRef, Scope: LLVMtype.LLVMMetadataRef, Name: [*c]const u8, NameLen: usize, ArgNo: c_uint, File: LLVMtype.LLVMMetadataRef, LineNo: c_uint, Ty: LLVMtype.LLVMMetadataRef, AlwaysPreserve: LLVMtype.LLVMBool, Flags: LLVMDIFlags) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMGetSubprogram(Func: LLVMtype.LLVMValueRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMSetSubprogram(Func: LLVMtype.LLVMValueRef, SP: LLVMtype.LLVMMetadataRef) void;
pub extern fn LLVMDISubprogramGetLine(Subprogram: LLVMtype.LLVMMetadataRef) c_uint;
pub extern fn LLVMInstructionGetDebugLoc(Inst: LLVMtype.LLVMValueRef) LLVMtype.LLVMMetadataRef;
pub extern fn LLVMInstructionSetDebugLoc(Inst: LLVMtype.LLVMValueRef, Loc: LLVMtype.LLVMMetadataRef) void;
pub extern fn LLVMGetMetadataKind(Metadata: LLVMtype.LLVMMetadataRef) LLVMtype.LLVMMetadataKind;
